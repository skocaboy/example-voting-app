# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageRepoVote: examplevotingapp_vote
  dockerfileVote: vote/Dockerfile
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an push image
      inputs:
        containerRegistry: 'aksprod2206'
        repository: 'imageRepoVote'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/$(dockerfileVote)'
        tags: '$(tag)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/k8s-specifications'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build
  variables:
    acrsecretnsvote: votingappauth
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:        
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'voting-app-cluster-vote'
              namespace: 'vote'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecretnsvote)'
              dockerRegistryEndpoint: 'aksprod2206'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'voting-app-cluster-vote'
              namespace: 'vote'
              manifests: |
                $(Pipeline.Workspace)/manifests/vote-deployment.yaml
                $(Pipeline.Workspace)/manifests/vote-service.yaml